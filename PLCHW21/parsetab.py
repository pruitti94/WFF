
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA EXISTS FORALL ID IF LPARENT NOT NUMBER OR RPARENT SEMI STRING WITHwaeStart : wff SEMIwaeStart : quant SEMIarg : STRINGarg : NUMBERarg : IDwff : ID LPARENT wff RPARENTwff : argwff : arg COMMA wffwff : wff AND wffwff : OR wffwff : NOT wffwff : LPARENT EXISTS quant RPARENT LPARENT wff RPARENTquant : argquant : arg COMMA quant'
    
_lr_action_items = {'ID':([0,7,8,12,14,15,16,27,30,31,],[4,4,4,4,4,24,4,4,24,4,]),'OR':([0,7,8,12,14,16,27,31,],[7,7,7,7,7,7,7,7,]),'NOT':([0,7,8,12,14,16,27,31,],[8,8,8,8,8,8,8,8,]),'LPARENT':([0,4,7,8,12,14,16,27,29,31,],[5,14,5,5,5,5,5,5,31,5,]),'STRING':([0,7,8,12,14,15,16,27,30,31,],[9,9,9,9,9,9,9,9,9,9,]),'NUMBER':([0,7,8,12,14,15,16,27,30,31,],[10,10,10,10,10,10,10,10,10,10,]),'$end':([1,11,13,],[0,-1,-2,]),'SEMI':([2,3,4,6,9,10,17,18,19,20,25,26,28,33,],[11,13,-5,-7,-3,-4,-10,-7,-11,-9,-8,-14,-6,-12,]),'AND':([2,4,6,9,10,17,18,19,20,21,25,28,32,33,],[12,-5,-7,-3,-4,12,-7,12,12,12,12,-6,12,-12,]),'COMMA':([4,6,9,10,18,23,24,],[-5,16,-3,-4,27,30,-5,]),'RPARENT':([4,9,10,17,18,19,20,21,22,23,24,25,26,28,32,33,],[-5,-3,-4,-10,-7,-11,-9,28,29,-13,-5,-8,-14,-6,33,-12,]),'EXISTS':([5,],[15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'waeStart':([0,],[1,]),'wff':([0,7,8,12,14,16,27,31,],[2,17,19,20,21,25,25,32,]),'quant':([0,15,16,30,],[3,22,26,26,]),'arg':([0,7,8,12,14,15,16,27,30,31,],[6,18,18,18,18,23,6,18,23,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> waeStart","S'",1,None,None,None),
  ('waeStart -> wff SEMI','waeStart',2,'p_waeStart_1','WFFParser.py',5),
  ('waeStart -> quant SEMI','waeStart',2,'p_waeStart_2','WFFParser.py',9),
  ('arg -> STRING','arg',1,'p_arg_1','WFFParser.py',13),
  ('arg -> NUMBER','arg',1,'p_arg_2','WFFParser.py',17),
  ('arg -> ID','arg',1,'p_arg_3','WFFParser.py',21),
  ('wff -> ID LPARENT wff RPARENT','wff',4,'p_wff_1','WFFParser.py',25),
  ('wff -> arg','wff',1,'p_wff_2','WFFParser.py',29),
  ('wff -> arg COMMA wff','wff',3,'p_wff_3','WFFParser.py',33),
  ('wff -> wff AND wff','wff',3,'p_wff_4','WFFParser.py',37),
  ('wff -> OR wff','wff',2,'p_wff_5','WFFParser.py',41),
  ('wff -> NOT wff','wff',2,'p_wff_6','WFFParser.py',45),
  ('wff -> LPARENT EXISTS quant RPARENT LPARENT wff RPARENT','wff',7,'p_quant_1','WFFParser.py',53),
  ('quant -> arg','quant',1,'p_quant_3','WFFParser.py',57),
  ('quant -> arg COMMA quant','quant',3,'p_quant_4','WFFParser.py',61),
]
